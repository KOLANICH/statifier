# Copyright (C) 2004 Valery Reznic
# This file is part of the Elf Statifier project
# 
# This project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License.
# See LICENSE file in the doc directory.

include ../config 

Problem := yes
INSTALL_COMMON := make install-common
ifeq "$(ELF32)" "yes"
   ALL_LOCAL_32     := ELF_CLASS=32 make all-local-32
   INSTALL_LOCAL_32 := $(INSTALL_COMMON) && ELF_CLASS=32 make install-local-32
   INSTALL_COMMON   := :
   Problem := no
endif
ifeq "$(ELF64)" "yes"
   ALL_LOCAL_64     := ELF_CLASS=64 make all-local-64
   INSTALL_LOCAL_64 := $(INSTALL_COMMON) && ELF_CLASS=64 make install-local-64
   Problem := no
endif

ifeq "$(Problem)" "yes"
   ALL_LOCAL_32 := @echo "At least one of the ELF32 and ELF64 should be set to 'yes'" 1>&2; exit 1
   INSTALL_LOCAL_32 := $(ALL_LOCAL_32)
endif

FLAGS_ELF     := $(FLAGS_$(ELF_CLASS))
PROCESSOR_ELF := $(PROCESSOR_$(ELF_CLASS))

SOURCES =                                  \
   Makefile                                \
   $(addsuffix .c,$(UTILS))                \
   $(addsuffix .S,$(FILES_TO_BE_EMBEDDED)) \
   $(INCLUDE_FILES)                        \
   $(SCRIPTS)                              \
   $(GDB_SCRIPTS)                          \
   $(RUNNERS)                              \

INCLUDE_FILES = \
   processor.h  \
   start.S      \
   end.S        \

UTILS =                 \
   phdrs                \
   readlink             \
   set_thread_area_addr \
   strtoul              \
   tls_test             \

FILES_TO_BE_EMBEDDED = \
   dl-var              \
   set_thread_area     \
   starter             \

SCRIPTS =             \
   dumps.sh           \
   regs.sh            \
   set_thread_area.sh \
   split.sh           \
   statifier.sh       \
 
RUNNERS =    \
   statifier \

GDB_SCRIPTS =          \
   dumps.gdb           \
   first.gdb           \
   map_reg_core.gdb    \
   set_thread_area.gdb \

LINK_NAMES = $(addprefix ../,$(SCRIPTS) $(GDB_SCRIPTS))

UTILS_WITH_ELF_CLASS = $(addprefix $(ELF_CLASS)/,$(UTILS))
FILES_TO_BE_EMBEDDED_WITH_ELF_CLASS = $(addprefix $(ELF_CLASS)/,$(FILES_TO_BE_EMBEDDED))
TARGETS = $(UTILS_WITH_ELF_CLASS) $(FILES_TO_BE_EMBEDDED_WITH_ELF_CLASS)

all:

.PHONY: all-local
all-local:
	$(ALL_LOCAL_32)
	$(ALL_LOCAL_64)
	
all-local-32 all-local-64: $(TARGETS)
	cd $(ELF_CLASS) && $(LN) $(LINK_NAMES) .

$(UTILS_WITH_ELF_CLASS): $(ELF_CLASS)/%: %.c
	@$(MKDIR) $(ELF_CLASS)
	gcc $(FLAGS_ELF) -Wall -O2 -g $< -o $@

$(ELF_CLASS)/set_thread_area_addr: processor.h

$(ELF_CLASS)/dl-var.o: $(ELF_CLASS)/AT.h

$(ELF_CLASS)/AT.h: /usr/include/elf.h 
	$(RM) $@
	{  \
		echo "/* Don't edit this file. It autogenerated from '$<' */" &&\
		awk '{                                              \
			if ( ($$1 == "#define") && ($$2 ~ "AT_")) { \
				print $$1 " " $$2 "\t" $$3;         \
			}                                           \
		}';                                                 \
	} < $< > $@ || { $(RM) $@; exit 1; }

# I need starter as raw binary - no elf header, no link with libc,
# so I have to specify '-Wl,--oformat,binary' and -nostdlib
# Because linker give warning about _start function I specify
# pretty dummy '--entry=0x0'
#$(FILES_TO_BE_EMBEDDED_WITH_ELF_CLASS): $(ELF_CLASS)/%: $(PROCESSOR_ELF)/%.S processor.h start.S end.S
#	@$(MKDIR) $(ELF_CLASS)
#	gcc -o $@ $(FLAGS_ELF) -I./$(ELF_CLASS) -include ./processor.h -include ./start.S -include ./$< end.S -Wl,--oformat,binary,--entry=0x0 -nostdlib

$(FILES_TO_BE_EMBEDDED_WITH_ELF_CLASS): $(ELF_CLASS)/%: $(ELF_CLASS)/%.o
	gcc -o $@ $< $(FLAGS_ELF) -Wl,--oformat,binary,--entry=0x0 -nostdlib

OBJECTS_TO_BE_EMBEDDED_WITH_ELF_CLASS = $(addsuffix .o,$(FILES_TO_BE_EMBEDDED_WITH_ELF_CLASS))
$(OBJECTS_TO_BE_EMBEDDED_WITH_ELF_CLASS): $(ELF_CLASS)/%.o: $(PROCESSOR_ELF)/%.S processor.h start.S end.S
	@$(MKDIR) $(ELF_CLASS)
	gcc -c -o $@ $(FLAGS_ELF) -I./$(ELF_CLASS) -include ./processor.h -include ./start.S -include ./$< end.S

LIB_DIR     = $(DESTDIR)/usr/lib/statifier
LIB_DIR_ELF = $(LIB_DIR)/$(ELF_CLASS)
BIN_DIR     = $(DESTDIR)/usr/bin

install-local:
	$(INSTALL_LOCAL_32)
	$(INSTALL_LOCAL_64)

install-common:
	$(MKDIR)                      $(LIB_DIR)
	$(INSTALL_RUN) $(SCRIPTS)     $(LIB_DIR)
	$(INSTALL_RO)  $(GDB_SCRIPTS) $(LIB_DIR)

	$(MKDIR)                  $(BIN_DIR)
	$(INSTALL_RUN) $(RUNNERS) $(BIN_DIR)

install-local-32 install-local-64:
	$(MKDIR)                  $(LIB_DIR_ELF)
	$(INSTALL_RUN) $(TARGETS) $(LIB_DIR_ELF)
	cd $(LIB_DIR_ELF) && $(LN) $(LINK_NAMES) .

clean-local:
	$(RMDIR) 32 64

include ../Makefile.include
